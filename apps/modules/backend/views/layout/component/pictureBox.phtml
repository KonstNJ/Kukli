<label class="form-label"><?=$local->_('label_picture');?></label>
<div class="form-group">
    <label class="btn btn-primary text-white">
        <svg class="icon">
            <use xlink:href="/assets/icons/sprites/free.svg#cil-image"></use>
        </svg>
        <input type="file" class="file-upload-default" accept=".png, .jpg, .jpeg, .gif, .webp" hidden>
    </label>
</div>
<div class="form-group mt-3" id="mmedia-picture">
    <?php
    $picture = $data['picture'] ?? null;
    if(!empty($picture)) {
        $picture = \json_decode($picture, true);
        $image_item = 0;
        foreach ((new \ArrayIterator($picture)) as $image)
        {
            echo '<div class="font-icon-wrapper">';
            echo '  <div class="count-indicator img-del">';
            echo '    <span class="count"><i class="fa fa-times" title="Delete an image"></i></span>';
            echo '  </div>';
            echo '  <input type="hidden" name="old_picture['.$image_item.']" value="'.$image.'" />';
            echo '  <img src="'.$image.'.jpg" />';
            echo '</div>';
            $image_item++;
        }
    }

    ?>
</div>
<script>
    const mediabox = document.querySelector('#mmedia-picture');
    const files = document.querySelector('.file-upload-default');
    files.addEventListener('change', function (e) {
        if(e.target.files)
        {
            let clone = files.cloneNode(true);
            clone.setAttribute('name', 'picture[]');
            for(let file of e.target.files){
                const reader = new FileReader();
                reader.onload = event => {
                    let source = event.target.result;
                    let item = `
                        <div class="mx-auto d-block mt-1 mb-1" style="position: relative;">
                            <img src="${source}" class="prev_picture" />
                            <button class="btn-close" style="top: 0; right: 0;" type="button" title="Delete an image" aria-label="Delete an image" onclick="del_rem_dynamic(this)"></button>
                        </div>
                    `;
                    mediabox.insertAdjacentHTML('beforeend', item);
                    mediabox.lastElementChild.insertAdjacentElement('beforeend', clone);
                };
                reader.readAsDataURL(file);
            }
            files.value = '';
        }
    });
    function del_rem_dynamic(e) {
        e.parentNode.remove();
    }
    function del_prev_img(e) {
        const curBtn = e.currentTarget;
        curBtn.closest('.font-icon-wrapper').remove();
    }
    const del_btn = document.querySelectorAll('.img-del');
    del_btn.forEach(btn => {
        btn.addEventListener('click', del_prev_img);
    });
</script>